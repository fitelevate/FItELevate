// Generated by view binder compiler. Do not edit!
package com.mcadeveloper.fitelevate.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.mcadeveloper.fitelevate.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMuscleGainBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout pose1;

  @NonNull
  public final LinearLayout pose10;

  @NonNull
  public final LinearLayout pose2;

  @NonNull
  public final LinearLayout pose3;

  @NonNull
  public final LinearLayout pose4;

  @NonNull
  public final LinearLayout pose5;

  @NonNull
  public final LinearLayout pose6;

  @NonNull
  public final LinearLayout pose7;

  @NonNull
  public final LinearLayout pose8;

  @NonNull
  public final LinearLayout pose9;

  @NonNull
  public final Toolbar toolbaar;

  private ActivityMuscleGainBinding(@NonNull LinearLayout rootView, @NonNull LinearLayout pose1,
      @NonNull LinearLayout pose10, @NonNull LinearLayout pose2, @NonNull LinearLayout pose3,
      @NonNull LinearLayout pose4, @NonNull LinearLayout pose5, @NonNull LinearLayout pose6,
      @NonNull LinearLayout pose7, @NonNull LinearLayout pose8, @NonNull LinearLayout pose9,
      @NonNull Toolbar toolbaar) {
    this.rootView = rootView;
    this.pose1 = pose1;
    this.pose10 = pose10;
    this.pose2 = pose2;
    this.pose3 = pose3;
    this.pose4 = pose4;
    this.pose5 = pose5;
    this.pose6 = pose6;
    this.pose7 = pose7;
    this.pose8 = pose8;
    this.pose9 = pose9;
    this.toolbaar = toolbaar;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMuscleGainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMuscleGainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_muscle_gain, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMuscleGainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.pose1;
      LinearLayout pose1 = ViewBindings.findChildViewById(rootView, id);
      if (pose1 == null) {
        break missingId;
      }

      id = R.id.pose10;
      LinearLayout pose10 = ViewBindings.findChildViewById(rootView, id);
      if (pose10 == null) {
        break missingId;
      }

      id = R.id.pose2;
      LinearLayout pose2 = ViewBindings.findChildViewById(rootView, id);
      if (pose2 == null) {
        break missingId;
      }

      id = R.id.pose3;
      LinearLayout pose3 = ViewBindings.findChildViewById(rootView, id);
      if (pose3 == null) {
        break missingId;
      }

      id = R.id.pose4;
      LinearLayout pose4 = ViewBindings.findChildViewById(rootView, id);
      if (pose4 == null) {
        break missingId;
      }

      id = R.id.pose5;
      LinearLayout pose5 = ViewBindings.findChildViewById(rootView, id);
      if (pose5 == null) {
        break missingId;
      }

      id = R.id.pose6;
      LinearLayout pose6 = ViewBindings.findChildViewById(rootView, id);
      if (pose6 == null) {
        break missingId;
      }

      id = R.id.pose7;
      LinearLayout pose7 = ViewBindings.findChildViewById(rootView, id);
      if (pose7 == null) {
        break missingId;
      }

      id = R.id.pose8;
      LinearLayout pose8 = ViewBindings.findChildViewById(rootView, id);
      if (pose8 == null) {
        break missingId;
      }

      id = R.id.pose9;
      LinearLayout pose9 = ViewBindings.findChildViewById(rootView, id);
      if (pose9 == null) {
        break missingId;
      }

      id = R.id.toolbaar;
      Toolbar toolbaar = ViewBindings.findChildViewById(rootView, id);
      if (toolbaar == null) {
        break missingId;
      }

      return new ActivityMuscleGainBinding((LinearLayout) rootView, pose1, pose10, pose2, pose3,
          pose4, pose5, pose6, pose7, pose8, pose9, toolbaar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
