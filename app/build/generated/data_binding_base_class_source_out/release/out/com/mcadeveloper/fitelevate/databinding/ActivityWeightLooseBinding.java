// Generated by view binder compiler. Do not edit!
package com.mcadeveloper.fitelevate.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.mcadeveloper.fitelevate.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityWeightLooseBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout frogPress;

  @NonNull
  public final LinearLayout inchWarms;

  @NonNull
  public final LinearLayout jumpingJacks;

  @NonNull
  public final LinearLayout legRaises;

  @NonNull
  public final LinearLayout lunges;

  @NonNull
  public final LinearLayout pushups;

  @NonNull
  public final LinearLayout reverseCrunches;

  @NonNull
  public final LinearLayout squatKicks;

  @NonNull
  public final LinearLayout squatReachUps;

  @NonNull
  public final LinearLayout squats;

  @NonNull
  public final Toolbar toolbaar;

  private ActivityWeightLooseBinding(@NonNull LinearLayout rootView,
      @NonNull LinearLayout frogPress, @NonNull LinearLayout inchWarms,
      @NonNull LinearLayout jumpingJacks, @NonNull LinearLayout legRaises,
      @NonNull LinearLayout lunges, @NonNull LinearLayout pushups,
      @NonNull LinearLayout reverseCrunches, @NonNull LinearLayout squatKicks,
      @NonNull LinearLayout squatReachUps, @NonNull LinearLayout squats,
      @NonNull Toolbar toolbaar) {
    this.rootView = rootView;
    this.frogPress = frogPress;
    this.inchWarms = inchWarms;
    this.jumpingJacks = jumpingJacks;
    this.legRaises = legRaises;
    this.lunges = lunges;
    this.pushups = pushups;
    this.reverseCrunches = reverseCrunches;
    this.squatKicks = squatKicks;
    this.squatReachUps = squatReachUps;
    this.squats = squats;
    this.toolbaar = toolbaar;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityWeightLooseBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityWeightLooseBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_weight_loose, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityWeightLooseBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.frogPress;
      LinearLayout frogPress = ViewBindings.findChildViewById(rootView, id);
      if (frogPress == null) {
        break missingId;
      }

      id = R.id.inchWarms;
      LinearLayout inchWarms = ViewBindings.findChildViewById(rootView, id);
      if (inchWarms == null) {
        break missingId;
      }

      id = R.id.jumpingJacks;
      LinearLayout jumpingJacks = ViewBindings.findChildViewById(rootView, id);
      if (jumpingJacks == null) {
        break missingId;
      }

      id = R.id.legRaises;
      LinearLayout legRaises = ViewBindings.findChildViewById(rootView, id);
      if (legRaises == null) {
        break missingId;
      }

      id = R.id.lunges;
      LinearLayout lunges = ViewBindings.findChildViewById(rootView, id);
      if (lunges == null) {
        break missingId;
      }

      id = R.id.pushups;
      LinearLayout pushups = ViewBindings.findChildViewById(rootView, id);
      if (pushups == null) {
        break missingId;
      }

      id = R.id.reverseCrunches;
      LinearLayout reverseCrunches = ViewBindings.findChildViewById(rootView, id);
      if (reverseCrunches == null) {
        break missingId;
      }

      id = R.id.squatKicks;
      LinearLayout squatKicks = ViewBindings.findChildViewById(rootView, id);
      if (squatKicks == null) {
        break missingId;
      }

      id = R.id.squatReachUps;
      LinearLayout squatReachUps = ViewBindings.findChildViewById(rootView, id);
      if (squatReachUps == null) {
        break missingId;
      }

      id = R.id.squats;
      LinearLayout squats = ViewBindings.findChildViewById(rootView, id);
      if (squats == null) {
        break missingId;
      }

      id = R.id.toolbaar;
      Toolbar toolbaar = ViewBindings.findChildViewById(rootView, id);
      if (toolbaar == null) {
        break missingId;
      }

      return new ActivityWeightLooseBinding((LinearLayout) rootView, frogPress, inchWarms,
          jumpingJacks, legRaises, lunges, pushups, reverseCrunches, squatKicks, squatReachUps,
          squats, toolbaar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
